================================================================================
To build follow the standard Win32Compile instructions with a few differences.
I use 32-bit MSYS/MinGW on x64 Windows 7 Ultimate.

================================================================================
1. To bootstrap I use the following:

cd vlc
cp -v /usr/win32/share/aclocal/* m4/
cp -v /usr/share/aclocal/* m4/
PATH=/usr/win32/bin:$PATH ./bootstrap

================================================================================
2. Then to configure:

sh extras/package/win32/configure-msys.sh

================================================================================
3. To build:

PATH=/usr/win32/bin:$PATH make -j6
PATH=/usr/win32/bin:$PATH make package-win32 -j6

(The -j6 switch is optional and tells makefile to use 6 threads, it speeds up
the build time on my 6-core machine.)

'make package-win32' will exit with the following error but that's normal and
VLC has still been built:

cp: cannot stat `./npapi-vlc/installed/lib/npvlc.dll': No such file or directory


================================================================================
4. Temporarily rename vlc.exe to wow.exe:

cd vlc-1.2.0-git
mv vlc.exe wow.exe

'wow.exe' can be replaced by a number of windowed-mode 3D Vision executable
names ('googleearth.exe', etc). This step is required because VLC does not yet
have a nVidia 3D Vision driver profile, and 'windowed mode' 3D Vision only
activates for programs with a driver profile. Thankfully, it's just a simple
file name check.

================================================================================
5. To view 3D video you manually enable stereoscopy by running VLC with:

wow --video-filter="stereoscopy"

You can pass the parameters --sterescopy-left= and --stereoscopy-right= to
set the stereoscopy value for each eye.

It's also possible to configure this via the QT4 interface by going to
'Effects and Filters' through the Video menu. Search for the Stereoscopic 3D
tab under the Video Effects tab.

The possible stereoscopic input values are: (found in modules/video_filter/stereoscopy.h)
--------------------------------------------------------------------------------
 blue         STEREOSCOPY_ANAGLYPH_BLUE
              The eye is encoded into the blue channel of the image and
              returned as a blue image.
 cyan         STEREOSCOPY_ANAGLYPH_CYAN
              The eye is encoded into the blue and green channels of the image
              and returned as a cyan image.
 green        STEREOSCOPY_ANAGLYPH_GREEN
              The eye is encoded into the green channel of the image and
              returned as a green image.
 magenta      STEREOSCOPY_ANAGLYPH_MAGENTA
              The eye is encoded into the red and blue channels of the image
              and returned as a magenta image.
 red          STEREOSCOPY_ANAGLYPH_RED
              The eye is encoded into the red channel of the image and returned
              as a red image.
 yellow       STEREOSCOPY_ANAGLYPH_YELLOW
              The eye is encoded into the red and green channels of the image
              and returned as a yellow image.

 blue-gray    STEREOSCOPY_ANAGLYPH_BLUE_GRAY
              The eye is encoded into the blue channel and returned as a
              grayscale image.
 cyan-gray    STEREOSCOPY_ANAGLYPH_CYAN_GRAY
              The eye is encoded into the blue and green channels of the image
              and returned as a grayscale image.
 green-gray   STEREOSCOPY_ANAGLYPH_GREEN_GRAY
              The eye is encoded into the green channel of the image and
              returned as a grayscale image.
 magenta-gray STEREOSCOPY_ANAGLYPH_MAGENTA_GRAY
              The eye is encoded into the red and blue channels of the image
              and returned as a grayscale image.
 red-gray  STEREOSCOPY_ANAGLYPH_RED_GRAY
              The eye is encoded into the red channel of the image and returned
              as a grayscale image.
 yellow-gray  STEREOSCOPY_ANAGLYPH_YELLOW_GRAY
              The eye is encoded into the red and green channels of the image
              and returned as a grayscale image.

 cyan-fill    STEREOSCOPY_ANAGLYPH_CYAN_FILL
              The eye is encoded into the blue and green channels of the image
              and returned as a full colour image. The missing red channel is
              filled in with the average of the blue and green channels.
 magenta-fill STEREOSCOPY_ANAGLYPH_MAGENTA_FILL
              The eye is encoded into the red and blue channels of the image
              and returned as a full colour image. The missing green channel
              is filled in with the average of the red and blue channels.
 yellow-fill  STEREOSCOPY_ANAGLYPH_YELLOW_FILL
              The eye is encoded into the red and green channels of the image
              and returned as a full colour image. The missing blue channel is
              filled in with the average of the red and green channels.

 left         STEREOSCOPY_SIDEBYSIDE_LEFT
              The eye is encoded into the left half of the image. Assumes the
              source is half-SBS but the aspect ratio will need to be halved
              for full-SBS.
 right        STEREOSCOPY_SIDEBYSIDE_RIGHT
              The eye is encoded into the right half of the image. Assumes the
              source is half-SBS but the aspect ratio will need to be halved
              for full-SBS.
 bottom       STEREOSCOPY_SIDEBYSIDE_BOTTOM
              The eye is encoded into the bottom half of the image. Assumes the
              source is half-SBS but the aspect ratio will need to be halved
              for full-SBS.
 top          STEREOSCOPY_SIDEBYSIDE_TOP
              The eye is encoded into the top half of the image. Assumes the
              source is half-SBS but the aspect ratio will need to be halved
              for full-SBS.
--------------------------------------------------------------------------------
Please only use the Direct3D vout because the other vout's are not stereoscopic
aware and will just sequentually show each eye. Also be sure to use the latest
nVidia drivers. (I have been developing with 275.22.)

The Direct3D vout does not require any configuring. If 3D Vision is detected
and a 3D video frames are being sent to it then it will be displayed in 3D!
